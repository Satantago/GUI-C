# CMAKE generated file: DO NOT EDIT!
# Generated by "Ninja" Generator, CMake Version 3.22

# This file contains all the build statements describing the
# compilation DAG.

# =============================================================================
# Write statements declared in CMakeLists.txt:
# 
# Which is the root file.
# =============================================================================

# =============================================================================
# Project: ProjetC_IG
# Configurations: Debug
# =============================================================================

#############################################
# Minimal version of Ninja required by this file

ninja_required_version = 1.5


#############################################
# Set configuration variable for custom commands.

CONFIGURATION = Debug
# =============================================================================
# Include auxiliary files.


#############################################
# Include rules file.

include CMakeFiles/rules.ninja

# =============================================================================

#############################################
# Logical path to working directory; prefix for absolute paths.

cmake_ninja_workdir = /home/hajbie/projetc_ig/cmake-build-debug/
# =============================================================================
# Object build statements for STATIC_LIBRARY target ei


#############################################
# Order-only phony target for ei

build cmake_object_order_depends_target_ei: phony || CMakeFiles/ei.dir

build CMakeFiles/ei.dir/src/ei_application.c.o: C_COMPILER__ei_Debug /home/hajbie/projetc_ig/src/ei_application.c || cmake_object_order_depends_target_ei
  DEP_FILE = CMakeFiles/ei.dir/src/ei_application.c.o.d
  FLAGS = -g
  INCLUDES = -I/home/hajbie/projetc_ig/include -I/usr/include/SDL2
  OBJECT_DIR = CMakeFiles/ei.dir
  OBJECT_FILE_DIR = CMakeFiles/ei.dir/src

build CMakeFiles/ei.dir/src/ei_geometrymanager.c.o: C_COMPILER__ei_Debug /home/hajbie/projetc_ig/src/ei_geometrymanager.c || cmake_object_order_depends_target_ei
  DEP_FILE = CMakeFiles/ei.dir/src/ei_geometrymanager.c.o.d
  FLAGS = -g
  INCLUDES = -I/home/hajbie/projetc_ig/include -I/usr/include/SDL2
  OBJECT_DIR = CMakeFiles/ei.dir
  OBJECT_FILE_DIR = CMakeFiles/ei.dir/src

build CMakeFiles/ei.dir/src/ei_widget.c.o: C_COMPILER__ei_Debug /home/hajbie/projetc_ig/src/ei_widget.c || cmake_object_order_depends_target_ei
  DEP_FILE = CMakeFiles/ei.dir/src/ei_widget.c.o.d
  FLAGS = -g
  INCLUDES = -I/home/hajbie/projetc_ig/include -I/usr/include/SDL2
  OBJECT_DIR = CMakeFiles/ei.dir
  OBJECT_FILE_DIR = CMakeFiles/ei.dir/src


# =============================================================================
# Link build statements for STATIC_LIBRARY target ei


#############################################
# Link the static library libei.a

build libei.a: C_STATIC_LIBRARY_LINKER__ei_Debug CMakeFiles/ei.dir/src/ei_application.c.o CMakeFiles/ei.dir/src/ei_geometrymanager.c.o CMakeFiles/ei.dir/src/ei_widget.c.o
  LANGUAGE_COMPILE_FLAGS = -g
  OBJECT_DIR = CMakeFiles/ei.dir
  POST_BUILD = :
  PRE_LINK = :
  TARGET_FILE = libei.a
  TARGET_PDB = ei.a.dbg

# =============================================================================
# Object build statements for EXECUTABLE target minimal


#############################################
# Order-only phony target for minimal

build cmake_object_order_depends_target_minimal: phony || CMakeFiles/minimal.dir

build CMakeFiles/minimal.dir/tests/minimal.c.o: C_COMPILER__minimal_Debug /home/hajbie/projetc_ig/tests/minimal.c || cmake_object_order_depends_target_minimal
  DEP_FILE = CMakeFiles/minimal.dir/tests/minimal.c.o.d
  FLAGS = -g
  INCLUDES = -I/home/hajbie/projetc_ig/include -I/usr/include/SDL2
  OBJECT_DIR = CMakeFiles/minimal.dir
  OBJECT_FILE_DIR = CMakeFiles/minimal.dir/tests


# =============================================================================
# Link build statements for EXECUTABLE target minimal


#############################################
# Link the executable minimal

build minimal: C_EXECUTABLE_LINKER__minimal_Debug CMakeFiles/minimal.dir/tests/minimal.c.o | ../_x11/libeibase64.a
  FLAGS = -g
  LINK_FLAGS = -rdynamic
  LINK_LIBRARIES = ../_x11/libeibase64.a  -L/home/hajbie/projetc_ig/_x11  -lfreeimage  -lSDL2  -lSDL2_ttf  -lSDL2_gfx  -lm
  OBJECT_DIR = CMakeFiles/minimal.dir
  POST_BUILD = :
  PRE_LINK = :
  TARGET_FILE = minimal
  TARGET_PDB = minimal.dbg

# =============================================================================
# Object build statements for EXECUTABLE target frame


#############################################
# Order-only phony target for frame

build cmake_object_order_depends_target_frame: phony || cmake_object_order_depends_target_ei

build CMakeFiles/frame.dir/tests/frame.c.o: C_COMPILER__frame_Debug /home/hajbie/projetc_ig/tests/frame.c || cmake_object_order_depends_target_frame
  DEP_FILE = CMakeFiles/frame.dir/tests/frame.c.o.d
  FLAGS = -g
  INCLUDES = -I/home/hajbie/projetc_ig/include -I/usr/include/SDL2
  OBJECT_DIR = CMakeFiles/frame.dir
  OBJECT_FILE_DIR = CMakeFiles/frame.dir/tests


# =============================================================================
# Link build statements for EXECUTABLE target frame


#############################################
# Link the executable frame

build frame: C_EXECUTABLE_LINKER__frame_Debug CMakeFiles/frame.dir/tests/frame.c.o | libei.a ../_x11/libeibase64.a || libei.a
  FLAGS = -g
  LINK_FLAGS = -rdynamic
  LINK_LIBRARIES = libei.a  ../_x11/libeibase64.a  -L/home/hajbie/projetc_ig/_x11  -lfreeimage  -lSDL2  -lSDL2_ttf  -lSDL2_gfx  -lm
  OBJECT_DIR = CMakeFiles/frame.dir
  POST_BUILD = :
  PRE_LINK = :
  TARGET_FILE = frame
  TARGET_PDB = frame.dbg

# =============================================================================
# Object build statements for EXECUTABLE target button


#############################################
# Order-only phony target for button

build cmake_object_order_depends_target_button: phony || cmake_object_order_depends_target_ei

build CMakeFiles/button.dir/tests/button.c.o: C_COMPILER__button_Debug /home/hajbie/projetc_ig/tests/button.c || cmake_object_order_depends_target_button
  DEP_FILE = CMakeFiles/button.dir/tests/button.c.o.d
  FLAGS = -g
  INCLUDES = -I/home/hajbie/projetc_ig/include -I/usr/include/SDL2
  OBJECT_DIR = CMakeFiles/button.dir
  OBJECT_FILE_DIR = CMakeFiles/button.dir/tests


# =============================================================================
# Link build statements for EXECUTABLE target button


#############################################
# Link the executable button

build button: C_EXECUTABLE_LINKER__button_Debug CMakeFiles/button.dir/tests/button.c.o | libei.a ../_x11/libeibase64.a || libei.a
  FLAGS = -g
  LINK_FLAGS = -rdynamic
  LINK_LIBRARIES = libei.a  ../_x11/libeibase64.a  -L/home/hajbie/projetc_ig/_x11  -lfreeimage  -lSDL2  -lSDL2_ttf  -lSDL2_gfx  -lm
  OBJECT_DIR = CMakeFiles/button.dir
  POST_BUILD = :
  PRE_LINK = :
  TARGET_FILE = button
  TARGET_PDB = button.dbg

# =============================================================================
# Object build statements for EXECUTABLE target hello_world


#############################################
# Order-only phony target for hello_world

build cmake_object_order_depends_target_hello_world: phony || cmake_object_order_depends_target_ei

build CMakeFiles/hello_world.dir/tests/hello_world.c.o: C_COMPILER__hello_world_Debug /home/hajbie/projetc_ig/tests/hello_world.c || cmake_object_order_depends_target_hello_world
  DEP_FILE = CMakeFiles/hello_world.dir/tests/hello_world.c.o.d
  FLAGS = -g
  INCLUDES = -I/home/hajbie/projetc_ig/include -I/usr/include/SDL2
  OBJECT_DIR = CMakeFiles/hello_world.dir
  OBJECT_FILE_DIR = CMakeFiles/hello_world.dir/tests


# =============================================================================
# Link build statements for EXECUTABLE target hello_world


#############################################
# Link the executable hello_world

build hello_world: C_EXECUTABLE_LINKER__hello_world_Debug CMakeFiles/hello_world.dir/tests/hello_world.c.o | libei.a ../_x11/libeibase64.a || libei.a
  FLAGS = -g
  LINK_FLAGS = -rdynamic
  LINK_LIBRARIES = libei.a  ../_x11/libeibase64.a  -L/home/hajbie/projetc_ig/_x11  -lfreeimage  -lSDL2  -lSDL2_ttf  -lSDL2_gfx  -lm
  OBJECT_DIR = CMakeFiles/hello_world.dir
  POST_BUILD = :
  PRE_LINK = :
  TARGET_FILE = hello_world
  TARGET_PDB = hello_world.dbg

# =============================================================================
# Object build statements for EXECUTABLE target puzzle


#############################################
# Order-only phony target for puzzle

build cmake_object_order_depends_target_puzzle: phony || cmake_object_order_depends_target_ei

build CMakeFiles/puzzle.dir/tests/puzzle.c.o: C_COMPILER__puzzle_Debug /home/hajbie/projetc_ig/tests/puzzle.c || cmake_object_order_depends_target_puzzle
  DEP_FILE = CMakeFiles/puzzle.dir/tests/puzzle.c.o.d
  FLAGS = -g
  INCLUDES = -I/home/hajbie/projetc_ig/include -I/usr/include/SDL2
  OBJECT_DIR = CMakeFiles/puzzle.dir
  OBJECT_FILE_DIR = CMakeFiles/puzzle.dir/tests


# =============================================================================
# Link build statements for EXECUTABLE target puzzle


#############################################
# Link the executable puzzle

build puzzle: C_EXECUTABLE_LINKER__puzzle_Debug CMakeFiles/puzzle.dir/tests/puzzle.c.o | libei.a ../_x11/libeibase64.a || libei.a
  FLAGS = -g
  LINK_FLAGS = -rdynamic
  LINK_LIBRARIES = libei.a  ../_x11/libeibase64.a  -L/home/hajbie/projetc_ig/_x11  -lfreeimage  -lSDL2  -lSDL2_ttf  -lSDL2_gfx  -lm
  OBJECT_DIR = CMakeFiles/puzzle.dir
  POST_BUILD = :
  PRE_LINK = :
  TARGET_FILE = puzzle
  TARGET_PDB = puzzle.dbg

# =============================================================================
# Object build statements for EXECUTABLE target two048


#############################################
# Order-only phony target for two048

build cmake_object_order_depends_target_two048: phony || cmake_object_order_depends_target_ei

build CMakeFiles/two048.dir/tests/two048.c.o: C_COMPILER__two048_Debug /home/hajbie/projetc_ig/tests/two048.c || cmake_object_order_depends_target_two048
  DEP_FILE = CMakeFiles/two048.dir/tests/two048.c.o.d
  FLAGS = -g
  INCLUDES = -I/home/hajbie/projetc_ig/include -I/usr/include/SDL2
  OBJECT_DIR = CMakeFiles/two048.dir
  OBJECT_FILE_DIR = CMakeFiles/two048.dir/tests


# =============================================================================
# Link build statements for EXECUTABLE target two048


#############################################
# Link the executable two048

build two048: C_EXECUTABLE_LINKER__two048_Debug CMakeFiles/two048.dir/tests/two048.c.o | libei.a ../_x11/libeibase64.a || libei.a
  FLAGS = -g
  LINK_FLAGS = -rdynamic
  LINK_LIBRARIES = libei.a  ../_x11/libeibase64.a  -L/home/hajbie/projetc_ig/_x11  -lfreeimage  -lSDL2  -lSDL2_ttf  -lSDL2_gfx  -lm
  OBJECT_DIR = CMakeFiles/two048.dir
  POST_BUILD = :
  PRE_LINK = :
  TARGET_FILE = two048
  TARGET_PDB = two048.dbg

# =============================================================================
# Object build statements for EXECUTABLE target minesweeper


#############################################
# Order-only phony target for minesweeper

build cmake_object_order_depends_target_minesweeper: phony || cmake_object_order_depends_target_ei

build CMakeFiles/minesweeper.dir/tests/minesweeper.c.o: C_COMPILER__minesweeper_Debug /home/hajbie/projetc_ig/tests/minesweeper.c || cmake_object_order_depends_target_minesweeper
  DEP_FILE = CMakeFiles/minesweeper.dir/tests/minesweeper.c.o.d
  FLAGS = -g
  INCLUDES = -I/home/hajbie/projetc_ig/include -I/usr/include/SDL2
  OBJECT_DIR = CMakeFiles/minesweeper.dir
  OBJECT_FILE_DIR = CMakeFiles/minesweeper.dir/tests


# =============================================================================
# Link build statements for EXECUTABLE target minesweeper


#############################################
# Link the executable minesweeper

build minesweeper: C_EXECUTABLE_LINKER__minesweeper_Debug CMakeFiles/minesweeper.dir/tests/minesweeper.c.o | libei.a ../_x11/libeibase64.a || libei.a
  FLAGS = -g
  LINK_FLAGS = -rdynamic
  LINK_LIBRARIES = libei.a  ../_x11/libeibase64.a  -L/home/hajbie/projetc_ig/_x11  -lfreeimage  -lSDL2  -lSDL2_ttf  -lSDL2_gfx  -lm
  OBJECT_DIR = CMakeFiles/minesweeper.dir
  POST_BUILD = :
  PRE_LINK = :
  TARGET_FILE = minesweeper
  TARGET_PDB = minesweeper.dbg

# =============================================================================
# Object build statements for EXECUTABLE target parsing


#############################################
# Order-only phony target for parsing

build cmake_object_order_depends_target_parsing: phony || cmake_object_order_depends_target_ei

build CMakeFiles/parsing.dir/tests/parsing.c.o: C_COMPILER__parsing_Debug /home/hajbie/projetc_ig/tests/parsing.c || cmake_object_order_depends_target_parsing
  DEP_FILE = CMakeFiles/parsing.dir/tests/parsing.c.o.d
  FLAGS = -g
  INCLUDES = -I/home/hajbie/projetc_ig/include -I/usr/include/SDL2
  OBJECT_DIR = CMakeFiles/parsing.dir
  OBJECT_FILE_DIR = CMakeFiles/parsing.dir/tests


# =============================================================================
# Link build statements for EXECUTABLE target parsing


#############################################
# Link the executable parsing

build parsing: C_EXECUTABLE_LINKER__parsing_Debug CMakeFiles/parsing.dir/tests/parsing.c.o | libei.a ../_x11/libeibase64.a || libei.a
  FLAGS = -g
  LINK_FLAGS = -rdynamic
  LINK_LIBRARIES = libei.a  ../_x11/libeibase64.a  -L/home/hajbie/projetc_ig/_x11  -lfreeimage  -lSDL2  -lSDL2_ttf  -lSDL2_gfx  -lm
  OBJECT_DIR = CMakeFiles/parsing.dir
  POST_BUILD = :
  PRE_LINK = :
  TARGET_FILE = parsing
  TARGET_PDB = parsing.dbg


#############################################
# Utility command for doc

build doc: phony CMakeFiles/doc


#############################################
# Utility command for edit_cache

build CMakeFiles/edit_cache.util: CUSTOM_COMMAND
  COMMAND = cd /home/hajbie/projetc_ig/cmake-build-debug && /home/hajbie/clion-2022.1/bin/cmake/linux/bin/ccmake -S/home/hajbie/projetc_ig -B/home/hajbie/projetc_ig/cmake-build-debug
  DESC = Running CMake cache editor...
  pool = console
  restat = 1

build edit_cache: phony CMakeFiles/edit_cache.util


#############################################
# Utility command for rebuild_cache

build CMakeFiles/rebuild_cache.util: CUSTOM_COMMAND
  COMMAND = cd /home/hajbie/projetc_ig/cmake-build-debug && /home/hajbie/clion-2022.1/bin/cmake/linux/bin/cmake --regenerate-during-build -S/home/hajbie/projetc_ig -B/home/hajbie/projetc_ig/cmake-build-debug
  DESC = Running CMake to regenerate build system...
  pool = console
  restat = 1

build rebuild_cache: phony CMakeFiles/rebuild_cache.util


#############################################
# Custom command for CMakeFiles/doc

build CMakeFiles/doc | ${cmake_ninja_workdir}CMakeFiles/doc: CUSTOM_COMMAND
  COMMAND = cd /home/hajbie/projetc_ig && doxygen /home/hajbie/projetc_ig/docs/doxygen.cfg

# =============================================================================
# Target aliases.

build ei: phony libei.a

# =============================================================================
# Folder targets.

# =============================================================================

#############################################
# Folder: /home/hajbie/projetc_ig/cmake-build-debug

build all: phony libei.a minimal frame button hello_world puzzle two048 minesweeper parsing

# =============================================================================
# Unknown Build Time Dependencies.
# Tell Ninja that they may appear as side effects of build rules
# otherwise ordered by order-only dependencies.

# =============================================================================
# Built-in targets


#############################################
# Re-run CMake if any of its inputs changed.

build build.ninja: RERUN_CMAKE | ../CMakeLists.txt /home/hajbie/clion-2022.1/bin/cmake/linux/share/cmake-3.22/Modules/CMakeCInformation.cmake /home/hajbie/clion-2022.1/bin/cmake/linux/share/cmake-3.22/Modules/CMakeCXXInformation.cmake /home/hajbie/clion-2022.1/bin/cmake/linux/share/cmake-3.22/Modules/CMakeCommonLanguageInclude.cmake /home/hajbie/clion-2022.1/bin/cmake/linux/share/cmake-3.22/Modules/CMakeGenericSystem.cmake /home/hajbie/clion-2022.1/bin/cmake/linux/share/cmake-3.22/Modules/CMakeInitializeConfigs.cmake /home/hajbie/clion-2022.1/bin/cmake/linux/share/cmake-3.22/Modules/CMakeLanguageInformation.cmake /home/hajbie/clion-2022.1/bin/cmake/linux/share/cmake-3.22/Modules/CMakeSystemSpecificInformation.cmake /home/hajbie/clion-2022.1/bin/cmake/linux/share/cmake-3.22/Modules/CMakeSystemSpecificInitialize.cmake /home/hajbie/clion-2022.1/bin/cmake/linux/share/cmake-3.22/Modules/Compiler/CMakeCommonCompilerMacros.cmake /home/hajbie/clion-2022.1/bin/cmake/linux/share/cmake-3.22/Modules/Compiler/GNU-C.cmake /home/hajbie/clion-2022.1/bin/cmake/linux/share/cmake-3.22/Modules/Compiler/GNU-CXX.cmake /home/hajbie/clion-2022.1/bin/cmake/linux/share/cmake-3.22/Modules/Compiler/GNU.cmake /home/hajbie/clion-2022.1/bin/cmake/linux/share/cmake-3.22/Modules/Platform/Linux-GNU-C.cmake /home/hajbie/clion-2022.1/bin/cmake/linux/share/cmake-3.22/Modules/Platform/Linux-GNU-CXX.cmake /home/hajbie/clion-2022.1/bin/cmake/linux/share/cmake-3.22/Modules/Platform/Linux-GNU.cmake /home/hajbie/clion-2022.1/bin/cmake/linux/share/cmake-3.22/Modules/Platform/Linux.cmake /home/hajbie/clion-2022.1/bin/cmake/linux/share/cmake-3.22/Modules/Platform/UnixPaths.cmake CMakeCache.txt CMakeFiles/3.22.3/CMakeCCompiler.cmake CMakeFiles/3.22.3/CMakeCXXCompiler.cmake CMakeFiles/3.22.3/CMakeSystem.cmake
  pool = console


#############################################
# A missing CMake input file is not an error.

build ../CMakeLists.txt /home/hajbie/clion-2022.1/bin/cmake/linux/share/cmake-3.22/Modules/CMakeCInformation.cmake /home/hajbie/clion-2022.1/bin/cmake/linux/share/cmake-3.22/Modules/CMakeCXXInformation.cmake /home/hajbie/clion-2022.1/bin/cmake/linux/share/cmake-3.22/Modules/CMakeCommonLanguageInclude.cmake /home/hajbie/clion-2022.1/bin/cmake/linux/share/cmake-3.22/Modules/CMakeGenericSystem.cmake /home/hajbie/clion-2022.1/bin/cmake/linux/share/cmake-3.22/Modules/CMakeInitializeConfigs.cmake /home/hajbie/clion-2022.1/bin/cmake/linux/share/cmake-3.22/Modules/CMakeLanguageInformation.cmake /home/hajbie/clion-2022.1/bin/cmake/linux/share/cmake-3.22/Modules/CMakeSystemSpecificInformation.cmake /home/hajbie/clion-2022.1/bin/cmake/linux/share/cmake-3.22/Modules/CMakeSystemSpecificInitialize.cmake /home/hajbie/clion-2022.1/bin/cmake/linux/share/cmake-3.22/Modules/Compiler/CMakeCommonCompilerMacros.cmake /home/hajbie/clion-2022.1/bin/cmake/linux/share/cmake-3.22/Modules/Compiler/GNU-C.cmake /home/hajbie/clion-2022.1/bin/cmake/linux/share/cmake-3.22/Modules/Compiler/GNU-CXX.cmake /home/hajbie/clion-2022.1/bin/cmake/linux/share/cmake-3.22/Modules/Compiler/GNU.cmake /home/hajbie/clion-2022.1/bin/cmake/linux/share/cmake-3.22/Modules/Platform/Linux-GNU-C.cmake /home/hajbie/clion-2022.1/bin/cmake/linux/share/cmake-3.22/Modules/Platform/Linux-GNU-CXX.cmake /home/hajbie/clion-2022.1/bin/cmake/linux/share/cmake-3.22/Modules/Platform/Linux-GNU.cmake /home/hajbie/clion-2022.1/bin/cmake/linux/share/cmake-3.22/Modules/Platform/Linux.cmake /home/hajbie/clion-2022.1/bin/cmake/linux/share/cmake-3.22/Modules/Platform/UnixPaths.cmake CMakeCache.txt CMakeFiles/3.22.3/CMakeCCompiler.cmake CMakeFiles/3.22.3/CMakeCXXCompiler.cmake CMakeFiles/3.22.3/CMakeSystem.cmake: phony


#############################################
# Clean all the built files.

build clean: CLEAN


#############################################
# Print all primary targets available.

build help: HELP


#############################################
# Make the all target the default.

default all
